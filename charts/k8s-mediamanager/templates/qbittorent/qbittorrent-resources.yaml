{{- if .Values.qbittorrent.enabled }}
{{- with .Values.qbittorrent.volume}}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .name }}
  {{ with .annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{ with .labels }}
  labels:
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  accessModes:
    - {{ .accessModes }}
  resources:
    requests:
      storage: {{ .storage }}
  storageClassName: {{ .storageClassName }}
  {{ with .selector }}
  selector:
  {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
---
## APPLICATION
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-mediamanager.fullname" . }}-qbittorrent
  labels:
    {{- include "k8s-mediamanager.labels" . | nindent 4 }}
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      {{- include "k8s-mediamanager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "k8s-mediamanager.selectorLabels" . | nindent 8 }}
        app: qbittorrent
    spec:
      terminationGracePeriodSeconds: 120
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "k8s-mediamanager.serviceAccountName" . }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.general.puid }}
        runAsGroup: {{ .Values.general.pgid }}
        fsGroup: {{ .Values.general.pgid }}
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: qbittorrent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          env:
            - name: PUID
              value: "{{ .Values.general.puid }}"
            - name: PGID
              value: "{{ .Values.general.pgid }}"
            - name: TZ
              value: "{{ .Values.general.timezone }}"
            - name: QBITTORRENT__PORT
              value: "{{ .Values.qbittorrent.container.port.webui }}"
            - name: QBITTORRENT__BT_PORT
              value: "{{ .Values.qbittorrent.container.port.peer }}"
          image: "{{ .Values.qbittorrent.container.image }}:{{ .Values.qbittorrent.container.tag }}"
          imagePullPolicy: {{ .Values.qbittorrent.container.imagePullPolicy }}
          livenessProbe:
            httpGet:
              port: {{ .Values.qbittorrent.container.port.webui }}
              path: /
            initialDelaySeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              port: {{ .Values.qbittorrent.container.port.webui }}
              path: /
            initialDelaySeconds: 10
            timeoutSeconds: 5
          ports:
            - name: webui
              containerPort: {{ .Values.qbittorrent.container.port.webui }}
              protocol: TCP
            - name: peer
              containerPort: {{ .Values.qbittorrent.container.port.peer }}
              protocol: TCP
            - name: peer-udp
              containerPort: {{ .Values.qbittorrent.container.port.peer }}
              protocol: UDP
          volumeMounts:
            - name: config
              mountPath: /config
            - name: media
              mountPath: /downloads
              subPath: "{{ .Values.general.sharedStorage.subPaths.downloads }}"
            {{- if .Values.qbittorrent.extraVolumes }}
            {{- toYaml .Values.qbittorrent.extraVolumeMounts | nindent 12}}
            {{- end }}
          {{- with .Values.qbittorrent.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if .Values.qbittorrent.metrics.enabled }}
        - name: metrics
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          image: "{{ .Values.qbittorrent.metrics.image }}:{{ .Values.qbittorrent.metrics.imageTag }}"
          imagePullPolicy: {{ .Values.qbittorrent.metrics.imagePullPolicy }}
          env:
            - name: QBITTORRENT_USERNAME
              value: "{{ .Values.qbittorrent.config.auth.username }}"
            - name: QBITTORRENT_PASSWORD
              value: "{{ .Values.qbittorrent.config.auth.password }}"
            - name: QBITTORRENT_BASE_URL
              value: http://localhost:{{ .Values.qbittorrent.container.port.webui }}
          ports:
            - name: metrics
              containerPort: {{ .Values.qbittorrent.metrics.containerPort }}
          livenessProbe:
            httpGet:
              port: metrics
              path: /
            initialDelaySeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              port: metrics
              path: /
            initialDelaySeconds: 15
            timeoutSeconds: 5
      {{- end }}
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: {{ .Values.qbittorrent.volume.name }}
        - name: media
          persistentVolumeClaim:
            claimName: {{ .Values.general.sharedStorage.persistentVolumeClaim.claimName }}
      {{- if .Values.qbittorrent.extraVolumes }}
        {{- toYaml .Values.qbittorrent.extraVolumes | nindent 6 }}
      {{- end }}
      {{- with .Values.qbittorrent.container.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
## SERVICES
apiVersion: v1
kind: Service
metadata:
  name: {{ include "k8s-mediamanager.fullname" . }}-qbittorrent
  labels:
    {{- include "k8s-mediamanager.labels" . | nindent 4 }}
    app: qbittorrent
spec:
  ipFamilyPolicy: {{ .Values.general.ipFamilyPolicy }}
  ipFamilies:
    {{ if .Values.general.ipFamilies }}
      {{- toYaml .Values.general.ipFamilies | nindent 4 }}
    {{- end }}
  type: {{ .Values.qbittorrent.service.webui.type }}
  ports:
    - name: webui
      port: {{ .Values.qbittorrent.service.webui.port }}
      targetPort: webui
      protocol: TCP
      {{ if .Values.qbittorrent.service.webui.nodePort }}
      nodePort: {{ .Values.qbittorrent.service.webui.nodePort }}
      {{ end }}
    {{ if .Values.qbittorrent.metrics.enabled }}
    - name: metrics
      port: {{ .Values.qbittorrent.metrics.containerPort }}
      targetPort: metrics
      protocol: TCP
    {{ end }}
  selector:
    app: qbittorrent
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "k8s-mediamanager.fullname" . }}-torrent
  labels:
    {{- include "k8s-mediamanager.labels" . | nindent 4 }}
    app: qbittorrent
spec:
  ipFamilyPolicy: {{ .Values.general.ipFamilyPolicy }}
  ipFamilies:
    {{ if .Values.general.ipFamilies }}
      {{- toYaml .Values.general.ipFamilies | nindent 4 }}
    {{- end }}
  type: {{ .Values.qbittorrent.service.peer.type }}
  ports:
    - name: peer
      port: {{ .Values.qbittorrent.service.peer.port }}
      targetPort: peer
      protocol: TCP
      {{ if .Values.qbittorrent.service.peer.nodePort }}
      nodePort: {{ .Values.qbittorrent.service.peer.nodePort }}
      {{ end }}
    - name: peer-udp
      port: {{ .Values.qbittorrent.service.peer.port }}
      targetPort: peer-udp
      protocol: UDP
      {{ if .Values.qbittorrent.service.peer.nodePortUDP }}
      nodePort: {{ .Values.qbittorrent.service.peer.nodePortUDP }}
      {{ end }}
  selector:
    app: qbittorrent
---
## INGRESS
{{- if .Values.qbittorrent.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "k8s-mediamanager.fullname" . }}-qbittorrent
  labels:
    {{- include "k8s-mediamanager.labels" . | nindent 4 }}
    app: qbittorrent
  {{- with .Values.qbittorrent.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.qbittorrent.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.general.ingress_host | quote }}
      secretName: {{ .Values.general.ingress_host }}-tls
  {{ end }}
  ingressClassName: {{ .Values.general.ingress.ingressClassName }}
  rules:
    - host: {{ .Values.general.ingress_host | quote }}
      http:
        paths:
        - path: {{ .Values.qbittorrent.ingress.path}}
          pathType: Prefix
          backend:
            service:
              name: {{ include "k8s-mediamanager.fullname" . }}-qbittorrent
              port:
                number: {{ .Values.qbittorrent.service.webui.port }}
{{- end }}
---
## SERVICEMONITOR
{{- if .Values.qbittorrent.metrics.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ include "k8s-mediamanager.fullname" . }}-qbittorrent
  labels:
    {{- include "k8s-mediamanager.labels" . | nindent 4 }}
    app: qbittorrent
spec:
  selector:
    matchLabels:
      app: qbittorrent
  endpoints:
    - port: metrics
{{- end }}
{{- end }}
---