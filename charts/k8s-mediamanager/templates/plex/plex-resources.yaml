{{ if .Values.plex.enabled }}
{{- with .Values.plex.volume }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .name }}
  {{ with .annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{ with .labels }}
  labels:
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  accessModes:
    - {{ .accessModes }}
  resources:
    requests:
      storage: {{ .storage }}
  storageClassName: {{ .storageClassName }}
  {{ with .selector }}
  selector:
  {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
{{- with .Values.plex.tautulli.volume }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .name }}
  {{ with .annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{ with .labels }}
  labels:
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  accessModes:
    - {{ .accessModes }}
  resources:
    requests:
      storage: {{ .storage }}
  storageClassName: {{ .storageClassName }}
  {{ with .selector }}
  selector:
  {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
---
### TAUTULLI
### INIT-CONTAINER
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-tautulli-cm
data:
  config.ini: |
    [General]
    http_host = ::
    http_port = {{ .Values.plex.tautulli.container.port }}
    http_root = {{ .Values.plex.tautulli.ingress.path }}
    pms_ip = localhost
    pms_port = {{ .Values.plex.container.port }}
    pms_url = "http://localhost:{{ .Values.plex.container.port }}"
    launch_browser = 0
  init-tautulli.sh: |
    #!/bin/bash
    echo "### Initializing config"
    if [ ! -f /tautulli-config/config.ini ]; then
      cp -n /init-tautulli/config.ini /tautulli-config/config.ini
      echo "### No configuration found, intialized with default settings ###"
    fi
---
### DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-mediamanager.fullname" . }}-plex
  labels:
    {{- include "k8s-mediamanager.labels" . | nindent 4 }}
spec:
  strategy:
    type: Recreate
  replicas: {{ .Values.plex.replicaCount }}
  selector:
    matchLabels:
      {{- include "k8s-mediamanager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "k8s-mediamanager.selectorLabels" . | nindent 8 }}
        app: plex
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "k8s-mediamanager.serviceAccountName" . }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.general.puid }}
        runAsGroup: {{ .Values.general.pgid }}
        fsGroup: {{ .Values.general.pgid }}
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: {{ .Values.general.sharedStorage.persistentVolumeClaim.claimName }}
        - name: plex-config
          persistentVolumeClaim:
            claimName: {{ .Values.plex.volume.name }}
        {{- if .Values.plex.extraVolumes }}
          {{- toYaml .Values.plex.extraVolumes | nindent 8}}
        {{- end }}
        {{- if .Values.plex.tautulli.enabled }}
        - name: tautulli-config
          persistentVolumeClaim:
            claimName: {{ .Values.plex.tautulli.volume.name }}
        - name: init-tautulli-cm
          configMap:
            defaultMode: 493
            name: init-tautulli-cm
        {{- end }}
      {{- if .Values.plex.tautulli.enabled }}
      initContainers:
        - name: tautuli-config
          image: docker.io/ubuntu:groovy
          command: ["/init-tautulli/init-tautulli.sh"]
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /init-tautulli
              name: init-tautulli-cm
            - name: tautulli-config
              mountPath: /tautulli-config
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      {{- end }}
      containers:
        - name: plex
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          env:
            - name: PUID
              value: "{{ .Values.general.puid }}"
            - name: PGID
              value: "{{ .Values.general.pgid }}"
            - name: PLEX_CLAIM
              value: {{ .Values.plex.claim }}
          image: "{{ .Values.plex.container.image }}:{{ .Values.plex.container.tag }}"
          imagePullPolicy: {{ .Values.plex.container.imagePullPolicy }}
          livenessProbe:
            httpGet:
              path: /identity
              port: {{ .Values.plex.container.port }}
            initialDelaySeconds: 15
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /identity
              port: {{ .Values.plex.container.port }}
            initialDelaySeconds: 15
            timeoutSeconds: 10
          ports:
            - name: plex-port
              containerPort: {{ .Values.plex.container.port }}
              protocol: TCP
            - name: dlna-server
              containerPort: 1900
              protocol: UDP
            - name: dlna-http
              containerPort: 32469
              protocol: TCP
            - name: bonjour
              containerPort: 5353
              protocol: UDP
            - name: plex-companion
              containerPort: 8324
              protocol: TCP
            - name: gdm-32410
              containerPort: 32410
              protocol: UDP
            - name: gdm-32412
              containerPort: 32412
              protocol: UDP
            - name: gdm-32413
              containerPort: 32413
              protocol: UDP
            - name: gdm-32414
              containerPort: 32414
              protocol: UDP
          volumeMounts:
            - name: plex-config
              mountPath: /config
            - name: media
              mountPath: /movies
              subPath: "{{ .Values.general.sharedStorage.subPaths.movies }}"
            - name: media
              mountPath: /tv
              subPath: "{{ .Values.general.sharedStorage.subPaths.tv }}"
            - name: media
              mountPath: /music
              subPath: "{{ .Values.general.sharedStorage.subPaths.music }}"
            {{- if .Values.plex.extraVolumeMounts }}
              {{- toYaml .Values.plex.extraVolumeMounts | nindent 12}}
            {{- end }}
          {{- with .Values.plex.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Values.plex.tautulli.enabled }}
        - name: tautulli
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          command: ["python", "Tautulli.py"]
          args: [
            "--config", "/config/config.ini",
            "--datadir", "/config",
            "--port", {{ .Values.plex.tautulli.container.port | quote }}
          ]
          env:
            - name: PUID
              value: "{{ .Values.general.puid }}"
            - name: PGID
              value: "{{ .Values.general.pgid }}"
            - name: TZ
              value: "{{ .Values.general.timezone }}"
          image: "{{ .Values.plex.tautulli.container.image }}:{{ .Values.plex.tautulli.container.tag }}"
          imagePullPolicy: {{ .Values.plex.tautulli.container.imagePullPolicy }}
          livenessProbe:
            httpGet:
              path: {{ .Values.plex.tautulli.ingress.path }}
              port: {{ .Values.plex.tautulli.container.port }}
            initialDelaySeconds: 15
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: {{ .Values.plex.tautulli.ingress.path }}
              port: {{ .Values.plex.tautulli.container.port }}
            initialDelaySeconds: 15
            timeoutSeconds: 10
          ports:
            - name: tautulli-port
              containerPort: {{ .Values.plex.tautulli.container.port }}
              protocol: TCP
          volumeMounts:
            - name: tautulli-config
              mountPath: /config
          {{- if .Values.plex.extraVolumeMounts }}
            {{- toYaml .Values.plex.extraVolumeMounts | nindent 12}}
          {{- end }}
          resources:
            {{- toYaml .Values.plex.tautulli.resources | nindent 12 }}
        {{- end }}
      {{- with .Values.plex.container.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
### SERVICE
apiVersion: v1
kind: Service
metadata:
  name: {{ include "k8s-mediamanager.fullname" . }}-plex
  labels:
    {{- include "k8s-mediamanager.labels" . | nindent 4 }}
    app: plex
spec:
  ipFamilyPolicy: {{ .Values.general.ipFamilyPolicy }}
  ipFamilies:
    {{ if .Values.general.ipFamilies }}
    {{- toYaml .Values.general.ipFamilies | nindent 4 }}
    {{- end }}
  type: {{ .Values.plex.service.type }}
  ports:
    - port: {{ .Values.plex.service.port }}
      targetPort: {{ .Values.plex.container.port }}
      protocol: TCP
      name: plex-port
      {{ if eq .Values.plex.service.type "NodePort" }}
      nodePort: {{ .Values.plex.service.nodePort }}
      {{ end }}
  selector:
    app: plex
---
{{ if .Values.plex.tautulli.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "k8s-mediamanager.fullname" . }}-tautulli
  labels:
    {{- include "k8s-mediamanager.labels" . | nindent 4 }}
    app: plex
spec:
  ipFamilyPolicy: {{ .Values.general.ipFamilyPolicy }}
  ipFamilies:
    {{ if .Values.general.ipFamilies }}
    {{- toYaml .Values.general.ipFamilies | nindent 4 }}
    {{- end }}
  type: {{ .Values.plex.tautulli.service.type }}
  ports:
    - port: {{ .Values.plex.tautulli.service.port }}
      targetPort: {{ .Values.plex.tautulli.container.port }}
      protocol: TCP
      name: tautulli-port
      {{ if eq .Values.plex.tautulli.service.type "NodePort" }}
      nodePort: {{ .Values.plex.tautulli.service.nodePort }}
      {{ end }}
  selector:
    app: plex
{{ end }}
---
### INGRESS
{{ if .Values.plex.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "k8s-mediamanager.fullname" . }}-plex
  labels:
    {{- include "k8s-mediamanager.labels" . | nindent 4 }}
    app: plex
  {{- with .Values.plex.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if .Values.plex.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.general.plex_ingress_host | quote }}
      secretName: {{ .Values.general.plex_ingress_host }}-tls
{{ end }}
  ingressClassName: {{ .Values.general.ingress.ingressClassName }}
  rules:
    - host: {{ .Values.general.plex_ingress_host | quote }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "k8s-mediamanager.fullname" . }}-plex
                port:
                  number: {{ .Values.plex.service.port }}
{{ end }}
---
{{ if .Values.plex.tautulli.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "k8s-mediamanager.fullname" . }}-tautulli
  labels:
    {{- include "k8s-mediamanager.labels" . | nindent 4 }}
    app: plex
  {{- with .Values.plex.tautulli.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.plex.tautulli.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.general.ingress_host | quote }}
      secretName: {{ .Values.general.ingress_host }}-tls
  {{ end }}
  ingressClassName: {{ .Values.general.ingress.ingressClassName }}
  ingressClassName: {{ .Values.general.ingress.ingressClassName }}
  rules:
    - host: {{ .Values.general.ingress_host | quote }}
      http:
        paths:
          - path: {{ .Values.plex.tautulli.ingress.path }}
            pathType: Prefix
            backend:
              service:
                name: {{ include "k8s-mediamanager.fullname" . }}-tautulli
                port:
                  number: {{ .Values.plex.tautulli.service.port }}
{{ end }}
{{ end }}
